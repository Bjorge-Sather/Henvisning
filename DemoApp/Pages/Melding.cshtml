@page
@using DemoApp.Models
@using DemoApp.Models.Fagsystem
@using DemoApp.Models.ViewModels
@using System.Xml.Schema
@using System.Xml
@model DemoApp.Pages.MeldingModel
@{
    ViewData["Title"] = "Melding";
    XmlSchemaElement? header = null;
    XmlSchemaElement? selectedElement = null;
        <span class="skjemavelger_tekst">Skjema:</span>
        <div name="skjemavelger" class="skjemavelger_dropdown">
            <select name="selectedSchemaName" onchange="this.form.submit()">
            <option value="">- velg skjema / melding -</option>
            @foreach (XmlSchema schema in XsdUtils.XsdSchemasWithRootElement )
            {
                foreach (XmlQualifiedName name in schema.Elements.Names)
                {
                    <optgroup label="@name.Name"></optgroup>
                    var element = schema.Elements[name];
                    if (element is XmlSchemaElement rotElement)
                    {
                        if (rotElement.ElementSchemaType is XmlSchemaComplexType complexType)
                        {
                            if (complexType.Particle is XmlSchemaChoice choiceElement)
                            {
                                foreach (XmlSchemaElement particle in choiceElement.Items)
                                {
                                    if (particle.Name == "MeldingHeader")
                                    {
                                        header = particle;
                                    }
                                    else
                                        {
                                            bool selected = false;
                                            if (Model.SelectedElementType == particle.QualifiedName.ToString())
                                            {
                                                selectedElement = particle;
                                                selected = true;
                                            }
                                            string? caption = XsdUtils.GetCaption(particle, true);
                                            if (selected)
                                            {
                                                <option value="@particle.QualifiedName" selected>@caption</option>
                                            }
                                            else
                                            {
                                            <option value="@particle.QualifiedName">@caption</option>
                                        }
                                    }
                                }
                            }
                            else
                            {
                                bool selected = false;
                                if (Model.SelectedElementType == rotElement.QualifiedName.ToString())
                                {
                                    selectedElement = rotElement;
                                    selected = true;
                                }
                                string? caption = XsdUtils.GetCaption(rotElement, true);
                                if (selected)
                                {
                                    ViewData["Title"] = caption;
                                    <option value="@rotElement.QualifiedName" selected>@caption</option>

                                    }
                                    else
                                    {
                                        <option value="@rotElement.QualifiedName">@caption</option>
                                    }
                                }
                            }
                        }
                    }
                }
            }
            </select>
            <hr />
            @if (selectedElement != null && header != null)
            {
                var values = Model.PrefillValues;
                @await Html.PartialAsync("/Pages/Partial/Gruppe.cshtml", new PropertyRendererModel("", header, values))
                @await Html.PartialAsync("/Pages/Partial/Gruppe.cshtml", new PropertyRendererModel("", selectedElement, values))
                <input type="submit" value="Send/Lagre" />
            }

    </div>
}
    
